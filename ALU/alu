module alu(a,b,s,out);
input [7:0]a,b;
input [3:0]s;
output [15:0]out;

parameter ADD=4'b0000,
          SUB=4'b0001,
		  INC=4'b0010,
		  DEC=4'b0011,
		  DIV=4'b0100,
		  MUL=4'b0101,
		  SHL=4'b0110,
		  SHR=4'b0111,
		  AND=4'b1000,
		  OR=4'b1001,
		  INV=4'b101,
		  NAND=4'b1011,
		  NOR =4'b1100,
		  XOR=4'b1101,
		  XNOR=4'b1110,
		  BUF=4'b1111;
reg [15:0]out;
always@(s,a,b)
begin
case(s)
ADD:out=a+b;
SUB:out=a-b;
INC:out=a+1'b1;
DEC:out=a-1'b0;
DIV:out=a/b;
MUL:out=a*b;
SHL:out=a<<1;
SHR:out=a>>1;
AND:out=a&&b;
OR:out=a||b;
INV:out=!(a);
NAND:out=~(a&b);
NOR:out=~(a|b);
XOR:out=a^b;
XNOR:out=(a~^b);
BUF:out=a;
endcase
end
endmodule
